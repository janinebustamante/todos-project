service: todos-backend

frameworkVersion: "3"

provider:
  name: aws
  runtime: nodejs14.x
  memorySize: 128
  region: ap-southeast-1
  stage: ${opt:stage, 'dev'}
  iam:
    role:
      statements:
        # Only allow to a specific dynamo db table
        - Effect: Allow
          Resource: !Sub "arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${self:service}-${self:provider.stage}"
          Action:
            - "dynamodb:*"

functions:
  hello:
    handler: src/functions/hello/main.handler
    events:
      - http:
          path: /hello
          method: get
          cors: true
      - http:
          path: /hello-world
          method: get
          cors: true
  createTodo:
    handler: src/functions/createTodo/main.handler
    events:
      - http:
          path: /todos
          method: post
          cors: true
  deleteTodo:
    handler: src/functions/deleteTodo/main.handler
    events:
      - http:
          path: /todos/{id}
          method: delete
          cors: true
          request:
            parameters:
              paths:
                id: true
  editTodo:
    handler: src/functions/editTodo/main.handler
    events:
      - http:
          path: /todos/{id}
          method: patch
          cors: true
          request:
            parameters:
              paths:
                id: true
  listTodos:
    handler: src/functions/listTodos/main.handler
    events:
      - http:
          path: /todos
          method: get
          cors: true

plugins:
  - serverless-plugin-typescript

resources:
  Resources:
    Table:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:service}-${self:provider.stage}
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
